
I2C Master.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000b36  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00000b36  00000bca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800080  00800080  00000bea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000c1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000140  00000000  00000000  00000c58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000024b7  00000000  00000000  00000d98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000afc  00000000  00000000  0000324f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c83  00000000  00000000  00003d4b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000037c  00000000  00000000  000049d0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000089e  00000000  00000000  00004d4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001a3e  00000000  00000000  000055ea  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000110  00000000  00000000  00007028  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <ldexp+0x8>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d4 e0       	ldi	r29, 0x04	; 4
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e6 e3       	ldi	r30, 0x36	; 54
  ea:	fb e0       	ldi	r31, 0x0B	; 11
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	a0 38       	cpi	r26, 0x80	; 128
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	a0 e8       	ldi	r26, 0x80	; 128
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a2 38       	cpi	r26, 0x82	; 130
 104:	b2 07       	cpc	r27, r18
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
 108:	0e 94 92 01 	call	0x324	; 0x324 <main>
 10c:	0c 94 99 05 	jmp	0xb32	; 0xb32 <_exit>

00000110 <__bad_interrupt>:
 110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <_ZN3I2c10MasterInitE15PrescalerValues>:
unsigned char I2c::ReadNack(void)
{
	TWCR = (1 << TWEN)|(1 << TWINT);									/* Enable TWI and clear interrupt flag */
	while (!(TWCR & (1 << TWINT)));										/* Wait until TWI finish its current job */
	return TWDR;														/* Return received data */
}
 114:	61 30       	cpi	r22, 0x01	; 1
 116:	49 f0       	breq	.+18     	; 0x12a <_ZN3I2c10MasterInitE15PrescalerValues+0x16>
 118:	28 f0       	brcs	.+10     	; 0x124 <_ZN3I2c10MasterInitE15PrescalerValues+0x10>
 11a:	62 30       	cpi	r22, 0x02	; 2
 11c:	41 f0       	breq	.+16     	; 0x12e <_ZN3I2c10MasterInitE15PrescalerValues+0x1a>
 11e:	63 30       	cpi	r22, 0x03	; 3
 120:	41 f0       	breq	.+16     	; 0x132 <_ZN3I2c10MasterInitE15PrescalerValues+0x1e>
 122:	09 c0       	rjmp	.+18     	; 0x136 <_ZN3I2c10MasterInitE15PrescalerValues+0x22>
 124:	08 98       	cbi	0x01, 0	; 1
 126:	09 98       	cbi	0x01, 1	; 1
 128:	06 c0       	rjmp	.+12     	; 0x136 <_ZN3I2c10MasterInitE15PrescalerValues+0x22>
 12a:	08 9a       	sbi	0x01, 0	; 1
 12c:	09 98       	cbi	0x01, 1	; 1
 12e:	08 98       	cbi	0x01, 0	; 1
 130:	09 9a       	sbi	0x01, 1	; 1
 132:	83 e0       	ldi	r24, 0x03	; 3
 134:	81 b9       	out	0x01, r24	; 1
 136:	61 b1       	in	r22, 0x01	; 1
 138:	70 e0       	ldi	r23, 0x00	; 0
 13a:	80 e0       	ldi	r24, 0x00	; 0
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 19 03 	call	0x632	; 0x632 <__floatunsisf>
 142:	9b 01       	movw	r18, r22
 144:	ac 01       	movw	r20, r24
 146:	60 e0       	ldi	r22, 0x00	; 0
 148:	70 e0       	ldi	r23, 0x00	; 0
 14a:	80 e8       	ldi	r24, 0x80	; 128
 14c:	90 e4       	ldi	r25, 0x40	; 64
 14e:	0e 94 a7 03 	call	0x74e	; 0x74e <pow>
 152:	9b 01       	movw	r18, r22
 154:	ac 01       	movw	r20, r24
 156:	0e 94 0c 02 	call	0x418	; 0x418 <__addsf3>
 15a:	9b 01       	movw	r18, r22
 15c:	ac 01       	movw	r20, r24
 15e:	60 e0       	ldi	r22, 0x00	; 0
 160:	70 e0       	ldi	r23, 0x00	; 0
 162:	80 e8       	ldi	r24, 0x80	; 128
 164:	92 e4       	ldi	r25, 0x42	; 66
 166:	0e 94 78 02 	call	0x4f0	; 0x4f0 <__divsf3>
 16a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <__fixunssfsi>
 16e:	60 b9       	out	0x00, r22	; 0
 170:	08 95       	ret

00000172 <_ZN3I2c5WriteEh>:
 172:	63 b9       	out	0x03, r22	; 3
 174:	84 e8       	ldi	r24, 0x84	; 132
 176:	86 bf       	out	0x36, r24	; 54
 178:	06 b6       	in	r0, 0x36	; 54
 17a:	07 fe       	sbrs	r0, 7
 17c:	fd cf       	rjmp	.-6      	; 0x178 <_ZN3I2c5WriteEh+0x6>
 17e:	81 b1       	in	r24, 0x01	; 1
 180:	88 7f       	andi	r24, 0xF8	; 248
 182:	88 32       	cpi	r24, 0x28	; 40
 184:	21 f0       	breq	.+8      	; 0x18e <_ZN3I2c5WriteEh+0x1c>
 186:	80 33       	cpi	r24, 0x30	; 48
 188:	21 f0       	breq	.+8      	; 0x192 <_ZN3I2c5WriteEh+0x20>
 18a:	82 e0       	ldi	r24, 0x02	; 2
 18c:	08 95       	ret
 18e:	80 e0       	ldi	r24, 0x00	; 0
 190:	08 95       	ret
 192:	81 e0       	ldi	r24, 0x01	; 1
 194:	08 95       	ret

00000196 <_ZN3I2c4StopEv>:

void I2c::Stop(void)
{
	TWCR = (1 << TWSTO)|(1 << TWINT)|(1 << TWEN);						/* Enable TWI, generate stop */
 196:	84 e9       	ldi	r24, 0x94	; 148
 198:	86 bf       	out	0x36, r24	; 54
	while (TWCR & (1 << TWSTO));										/* Wait until stop condition execution */
 19a:	06 b6       	in	r0, 0x36	; 54
 19c:	04 fc       	sbrc	r0, 4
 19e:	fd cf       	rjmp	.-6      	; 0x19a <_ZN3I2c4StopEv+0x4>
}
 1a0:	08 95       	ret

000001a2 <_ZN3I2c9StartWaitEh>:
		return 3;														/* Else return 3 to indicate SLA+W failed */
	}
}

void I2c::StartWait(unsigned char writeAddress)
{
 1a2:	ef 92       	push	r14
 1a4:	ff 92       	push	r15
 1a6:	1f 93       	push	r17
 1a8:	cf 93       	push	r28
 1aa:	df 93       	push	r29
 1ac:	7c 01       	movw	r14, r24
 1ae:	16 2f       	mov	r17, r22
	uint8_t status;														/* Declare variable */
	while (1)
	{
		TWCR = (1 << TWSTA)|(1 << TWEN)|(1 << TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
 1b0:	c4 ea       	ldi	r28, 0xA4	; 164
		while (!(TWCR & (1 << TWINT)));									/* Wait until TWI finish its current job (start condition) */
		status = TWSR & 0xF8;											/* Read TWI status register with masking lower three bits */
		if (status != 0x08)												/* Check weather start condition transmitted successfully or not? */
		continue;														/* If no then continue with start loop again */
		TWDR = writeAddress;											/* If yes then write SLA+W in TWI data register */
		TWCR = (1 << TWEN)|(1 << TWINT);								/* Enable TWI and clear interrupt flag */
 1b2:	d4 e8       	ldi	r29, 0x84	; 132
void I2c::StartWait(unsigned char writeAddress)
{
	uint8_t status;														/* Declare variable */
	while (1)
	{
		TWCR = (1 << TWSTA)|(1 << TWEN)|(1 << TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
 1b4:	c6 bf       	out	0x36, r28	; 54
		while (!(TWCR & (1 << TWINT)));									/* Wait until TWI finish its current job (start condition) */
 1b6:	06 b6       	in	r0, 0x36	; 54
 1b8:	07 fe       	sbrs	r0, 7
 1ba:	fd cf       	rjmp	.-6      	; 0x1b6 <_ZN3I2c9StartWaitEh+0x14>
		status = TWSR & 0xF8;											/* Read TWI status register with masking lower three bits */
 1bc:	81 b1       	in	r24, 0x01	; 1
		if (status != 0x08)												/* Check weather start condition transmitted successfully or not? */
 1be:	88 7f       	andi	r24, 0xF8	; 248
 1c0:	88 30       	cpi	r24, 0x08	; 8
 1c2:	c1 f7       	brne	.-16     	; 0x1b4 <_ZN3I2c9StartWaitEh+0x12>
		continue;														/* If no then continue with start loop again */
		TWDR = writeAddress;											/* If yes then write SLA+W in TWI data register */
 1c4:	13 b9       	out	0x03, r17	; 3
		TWCR = (1 << TWEN)|(1 << TWINT);								/* Enable TWI and clear interrupt flag */
 1c6:	d6 bf       	out	0x36, r29	; 54
		while (!(TWCR & (1 << TWINT)));									/* Wait until TWI finish its current job (Write operation) */
 1c8:	06 b6       	in	r0, 0x36	; 54
 1ca:	07 fe       	sbrs	r0, 7
 1cc:	fd cf       	rjmp	.-6      	; 0x1c8 <_ZN3I2c9StartWaitEh+0x26>
		status = TWSR & 0xF8;											/* Read TWI status register with masking lower three bits */
 1ce:	81 b1       	in	r24, 0x01	; 1
		if (status != 0x18 )											/* Check weather SLA+W transmitted & ack received or not? */
 1d0:	88 7f       	andi	r24, 0xF8	; 248
 1d2:	88 31       	cpi	r24, 0x18	; 24
 1d4:	21 f0       	breq	.+8      	; 0x1de <_ZN3I2c9StartWaitEh+0x3c>
		{
			Stop();														/* If not then generate stop condition */
 1d6:	c7 01       	movw	r24, r14
 1d8:	0e 94 cb 00 	call	0x196	; 0x196 <_ZN3I2c4StopEv>
			continue;													/* continue with start loop again */
 1dc:	eb cf       	rjmp	.-42     	; 0x1b4 <_ZN3I2c9StartWaitEh+0x12>
		}
		break;															/* If yes then break loop */
	}
}
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	1f 91       	pop	r17
 1e4:	ff 90       	pop	r15
 1e6:	ef 90       	pop	r14
 1e8:	08 95       	ret

000001ea <_ZN13Lcd_4_BitMode10LcdCommandEh>:
	if (row == 0 && pos<16)
	LcdCommand((pos & 0x0F)|0x80);																			/* Command of first row and required position<16 */
	else if (row == 1 && pos<16)
	LcdCommand((pos & 0x0F)|0xC0);																			/* Command of first row and required position<16 */
	LcdString(str);																							/* Call LCD string function */
}
 1ea:	88 b3       	in	r24, 0x18	; 24
 1ec:	8f 70       	andi	r24, 0x0F	; 15
 1ee:	96 2f       	mov	r25, r22
 1f0:	90 7f       	andi	r25, 0xF0	; 240
 1f2:	89 2b       	or	r24, r25
 1f4:	88 bb       	out	0x18, r24	; 24
 1f6:	c0 98       	cbi	0x18, 0	; 24
 1f8:	c1 9a       	sbi	0x18, 1	; 24
 1fa:	00 00       	nop
 1fc:	c1 98       	cbi	0x18, 1	; 24
 1fe:	82 e4       	ldi	r24, 0x42	; 66
 200:	8a 95       	dec	r24
 202:	f1 f7       	brne	.-4      	; 0x200 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x16>
 204:	00 c0       	rjmp	.+0      	; 0x206 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x1c>
 206:	88 b3       	in	r24, 0x18	; 24
 208:	8f 70       	andi	r24, 0x0F	; 15
 20a:	90 e1       	ldi	r25, 0x10	; 16
 20c:	69 9f       	mul	r22, r25
 20e:	b0 01       	movw	r22, r0
 210:	11 24       	eor	r1, r1
 212:	68 2b       	or	r22, r24
 214:	68 bb       	out	0x18, r22	; 24
 216:	c1 9a       	sbi	0x18, 1	; 24
 218:	00 00       	nop
 21a:	c1 98       	cbi	0x18, 1	; 24
 21c:	83 ef       	ldi	r24, 0xF3	; 243
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	01 97       	sbiw	r24, 0x01	; 1
 222:	f1 f7       	brne	.-4      	; 0x220 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x36>
 224:	00 c0       	rjmp	.+0      	; 0x226 <_ZN13Lcd_4_BitMode10LcdCommandEh+0x3c>
 226:	00 00       	nop
 228:	08 95       	ret

0000022a <_ZN13Lcd_4_BitMode7LcdCharEh>:
 22a:	88 b3       	in	r24, 0x18	; 24
 22c:	8f 70       	andi	r24, 0x0F	; 15
 22e:	96 2f       	mov	r25, r22
 230:	90 7f       	andi	r25, 0xF0	; 240
 232:	89 2b       	or	r24, r25
 234:	88 bb       	out	0x18, r24	; 24
 236:	c0 9a       	sbi	0x18, 0	; 24
 238:	c1 9a       	sbi	0x18, 1	; 24
 23a:	00 00       	nop
 23c:	c1 98       	cbi	0x18, 1	; 24
 23e:	82 e4       	ldi	r24, 0x42	; 66
 240:	8a 95       	dec	r24
 242:	f1 f7       	brne	.-4      	; 0x240 <_ZN13Lcd_4_BitMode7LcdCharEh+0x16>
 244:	00 c0       	rjmp	.+0      	; 0x246 <_ZN13Lcd_4_BitMode7LcdCharEh+0x1c>
 246:	88 b3       	in	r24, 0x18	; 24
 248:	8f 70       	andi	r24, 0x0F	; 15
 24a:	90 e1       	ldi	r25, 0x10	; 16
 24c:	69 9f       	mul	r22, r25
 24e:	b0 01       	movw	r22, r0
 250:	11 24       	eor	r1, r1
 252:	68 2b       	or	r22, r24
 254:	68 bb       	out	0x18, r22	; 24
 256:	c1 9a       	sbi	0x18, 1	; 24
 258:	00 00       	nop
 25a:	c1 98       	cbi	0x18, 1	; 24
 25c:	83 ef       	ldi	r24, 0xF3	; 243
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	01 97       	sbiw	r24, 0x01	; 1
 262:	f1 f7       	brne	.-4      	; 0x260 <_ZN13Lcd_4_BitMode7LcdCharEh+0x36>
 264:	00 c0       	rjmp	.+0      	; 0x266 <_ZN13Lcd_4_BitMode7LcdCharEh+0x3c>
 266:	00 00       	nop
 268:	08 95       	ret

0000026a <_ZN13Lcd_4_BitMode7LcdInitEv>:
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	ec 01       	movw	r28, r24
 270:	8f ef       	ldi	r24, 0xFF	; 255
 272:	87 bb       	out	0x17, r24	; 23
 274:	87 e8       	ldi	r24, 0x87	; 135
 276:	93 e1       	ldi	r25, 0x13	; 19
 278:	01 97       	sbiw	r24, 0x01	; 1
 27a:	f1 f7       	brne	.-4      	; 0x278 <_ZN13Lcd_4_BitMode7LcdInitEv+0xe>
 27c:	00 c0       	rjmp	.+0      	; 0x27e <_ZN13Lcd_4_BitMode7LcdInitEv+0x14>
 27e:	00 00       	nop
 280:	62 e0       	ldi	r22, 0x02	; 2
 282:	ce 01       	movw	r24, r28
 284:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
 288:	68 e2       	ldi	r22, 0x28	; 40
 28a:	ce 01       	movw	r24, r28
 28c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
 290:	6c e0       	ldi	r22, 0x0C	; 12
 292:	ce 01       	movw	r24, r28
 294:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
 298:	66 e0       	ldi	r22, 0x06	; 6
 29a:	ce 01       	movw	r24, r28
 29c:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
 2a0:	61 e0       	ldi	r22, 0x01	; 1
 2a2:	ce 01       	movw	r24, r28
 2a4:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
 2a8:	83 ef       	ldi	r24, 0xF3	; 243
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	01 97       	sbiw	r24, 0x01	; 1
 2ae:	f1 f7       	brne	.-4      	; 0x2ac <_ZN13Lcd_4_BitMode7LcdInitEv+0x42>
 2b0:	00 c0       	rjmp	.+0      	; 0x2b2 <_ZN13Lcd_4_BitMode7LcdInitEv+0x48>
 2b2:	00 00       	nop
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	08 95       	ret

000002ba <_ZN13Lcd_4_BitMode9LcdStringEPc>:
 2ba:	ef 92       	push	r14
 2bc:	ff 92       	push	r15
 2be:	0f 93       	push	r16
 2c0:	1f 93       	push	r17
 2c2:	cf 93       	push	r28
 2c4:	df 93       	push	r29
 2c6:	eb 01       	movw	r28, r22
 2c8:	68 81       	ld	r22, Y
 2ca:	66 23       	and	r22, r22
 2cc:	69 f0       	breq	.+26     	; 0x2e8 <_ZN13Lcd_4_BitMode9LcdStringEPc+0x2e>
 2ce:	7c 01       	movw	r14, r24
 2d0:	21 96       	adiw	r28, 0x01	; 1
 2d2:	00 e0       	ldi	r16, 0x00	; 0
 2d4:	10 e0       	ldi	r17, 0x00	; 0
 2d6:	c7 01       	movw	r24, r14
 2d8:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode7LcdCharEh>
 2dc:	0f 5f       	subi	r16, 0xFF	; 255
 2de:	1f 4f       	sbci	r17, 0xFF	; 255
 2e0:	69 91       	ld	r22, Y+
 2e2:	61 11       	cpse	r22, r1
 2e4:	f8 cf       	rjmp	.-16     	; 0x2d6 <_ZN13Lcd_4_BitMode9LcdStringEPc+0x1c>
 2e6:	02 c0       	rjmp	.+4      	; 0x2ec <_ZN13Lcd_4_BitMode9LcdStringEPc+0x32>
 2e8:	00 e0       	ldi	r16, 0x00	; 0
 2ea:	10 e0       	ldi	r17, 0x00	; 0
 2ec:	80 2f       	mov	r24, r16
 2ee:	df 91       	pop	r29
 2f0:	cf 91       	pop	r28
 2f2:	1f 91       	pop	r17
 2f4:	0f 91       	pop	r16
 2f6:	ff 90       	pop	r15
 2f8:	ef 90       	pop	r14
 2fa:	08 95       	ret

000002fc <_ZN13Lcd_4_BitMode7LcdGoXyEhh>:

void Lcd_4_BitMode::LcdGoXy (unsigned char row,unsigned char pos)
{
	if (row == 0 && pos<16)
 2fc:	61 11       	cpse	r22, r1
 2fe:	08 c0       	rjmp	.+16     	; 0x310 <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x14>
 300:	40 31       	cpi	r20, 0x10	; 16
 302:	78 f4       	brcc	.+30     	; 0x322 <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x26>
	LcdCommand((pos & 0x0F)|0x80);																			/* Command of first row and required position<16 */
 304:	4f 70       	andi	r20, 0x0F	; 15
 306:	64 2f       	mov	r22, r20
 308:	60 68       	ori	r22, 0x80	; 128
 30a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
 30e:	08 95       	ret
	else if (row == 1 && pos<16)
 310:	61 30       	cpi	r22, 0x01	; 1
 312:	39 f4       	brne	.+14     	; 0x322 <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x26>
 314:	40 31       	cpi	r20, 0x10	; 16
 316:	28 f4       	brcc	.+10     	; 0x322 <_ZN13Lcd_4_BitMode7LcdGoXyEhh+0x26>
	LcdCommand((pos & 0x0F)|0xC0);																			/* Command of first row and required position<16 */
 318:	4f 70       	andi	r20, 0x0F	; 15
 31a:	64 2f       	mov	r22, r20
 31c:	60 6c       	ori	r22, 0xC0	; 192
 31e:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
 322:	08 95       	ret

00000324 <main>:
}
*/


int main()
{
 324:	ef 92       	push	r14
 326:	ff 92       	push	r15
 328:	0f 93       	push	r16
 32a:	1f 93       	push	r17
 32c:	cf 93       	push	r28
 32e:	df 93       	push	r29
 330:	cd b7       	in	r28, 0x3d	; 61
 332:	de b7       	in	r29, 0x3e	; 62
 334:	2a 97       	sbiw	r28, 0x0a	; 10
 336:	0f b6       	in	r0, 0x3f	; 63
 338:	f8 94       	cli
 33a:	de bf       	out	0x3e, r29	; 62
 33c:	0f be       	out	0x3f, r0	; 63
 33e:	cd bf       	out	0x3d, r28	; 61
	lcd.LcdInit();
 340:	81 e8       	ldi	r24, 0x81	; 129
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 35 01 	call	0x26a	; 0x26a <_ZN13Lcd_4_BitMode7LcdInitEv>
	lcd.LcdString("Master Device:");
 348:	60 e6       	ldi	r22, 0x60	; 96
 34a:	70 e0       	ldi	r23, 0x00	; 0
 34c:	81 e8       	ldi	r24, 0x81	; 129
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	0e 94 5d 01 	call	0x2ba	; 0x2ba <_ZN13Lcd_4_BitMode9LcdStringEPc>
	lcd.LcdCommand(GoSecondLine);
 354:	60 ec       	ldi	r22, 0xC0	; 192
 356:	81 e8       	ldi	r24, 0x81	; 129
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN13Lcd_4_BitMode10LcdCommandEh>
	lcd.LcdString("Sent: ");
 35e:	6f e6       	ldi	r22, 0x6F	; 111
 360:	70 e0       	ldi	r23, 0x00	; 0
 362:	81 e8       	ldi	r24, 0x81	; 129
 364:	90 e0       	ldi	r25, 0x00	; 0
 366:	0e 94 5d 01 	call	0x2ba	; 0x2ba <_ZN13Lcd_4_BitMode9LcdStringEPc>
	lcd.LcdGoXy(1, 6);
 36a:	46 e0       	ldi	r20, 0x06	; 6
 36c:	61 e0       	ldi	r22, 0x01	; 1
 36e:	81 e8       	ldi	r24, 0x81	; 129
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	0e 94 7e 01 	call	0x2fc	; 0x2fc <_ZN13Lcd_4_BitMode7LcdGoXyEhh>
	i2c.MasterInit(DevidedBy64);
 376:	63 e0       	ldi	r22, 0x03	; 3
 378:	80 e8       	ldi	r24, 0x80	; 128
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 8a 00 	call	0x114	; 0x114 <_ZN3I2c10MasterInitE15PrescalerValues>
	char data[] = "Milad Hsh";
 380:	8a e0       	ldi	r24, 0x0A	; 10
 382:	e6 e7       	ldi	r30, 0x76	; 118
 384:	f0 e0       	ldi	r31, 0x00	; 0
 386:	de 01       	movw	r26, r28
 388:	11 96       	adiw	r26, 0x01	; 1
 38a:	01 90       	ld	r0, Z+
 38c:	0d 92       	st	X+, r0
 38e:	8a 95       	dec	r24
 390:	e1 f7       	brne	.-8      	; 0x38a <main+0x66>
	i2c.StartWait(0x10);
 392:	60 e1       	ldi	r22, 0x10	; 16
 394:	80 e8       	ldi	r24, 0x80	; 128
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	0e 94 d1 00 	call	0x1a2	; 0x1a2 <_ZN3I2c9StartWaitEh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 39c:	8f e0       	ldi	r24, 0x0F	; 15
 39e:	97 e2       	ldi	r25, 0x27	; 39
 3a0:	01 97       	sbiw	r24, 0x01	; 1
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <main+0x7c>
 3a4:	00 c0       	rjmp	.+0      	; 0x3a6 <main+0x82>
 3a6:	00 00       	nop
	_delay_ms(5);
	i2c.Write(0x11);
 3a8:	61 e1       	ldi	r22, 0x11	; 17
 3aa:	80 e8       	ldi	r24, 0x80	; 128
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 b9 00 	call	0x172	; 0x172 <_ZN3I2c5WriteEh>
	for (uint8_t i = 0 ; i <= strlen(data) ; i++)
 3b2:	10 e0       	ldi	r17, 0x00	; 0
	{
		i2c.Write(data[i]);
 3b4:	ce 01       	movw	r24, r28
 3b6:	01 96       	adiw	r24, 0x01	; 1
 3b8:	7c 01       	movw	r14, r24
 3ba:	f7 01       	movw	r30, r14
 3bc:	e1 0f       	add	r30, r17
 3be:	f1 1d       	adc	r31, r1
 3c0:	00 81       	ld	r16, Z
 3c2:	60 2f       	mov	r22, r16
 3c4:	80 e8       	ldi	r24, 0x80	; 128
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 b9 00 	call	0x172	; 0x172 <_ZN3I2c5WriteEh>
		lcd.LcdChar(data[i]);
 3cc:	60 2f       	mov	r22, r16
 3ce:	81 e8       	ldi	r24, 0x81	; 129
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 15 01 	call	0x22a	; 0x22a <_ZN13Lcd_4_BitMode7LcdCharEh>
	i2c.MasterInit(DevidedBy64);
	char data[] = "Milad Hsh";
	i2c.StartWait(0x10);
	_delay_ms(5);
	i2c.Write(0x11);
	for (uint8_t i = 0 ; i <= strlen(data) ; i++)
 3d6:	1f 5f       	subi	r17, 0xFF	; 255
 3d8:	f7 01       	movw	r30, r14
 3da:	01 90       	ld	r0, Z+
 3dc:	00 20       	and	r0, r0
 3de:	e9 f7       	brne	.-6      	; 0x3da <main+0xb6>
 3e0:	31 97       	sbiw	r30, 0x01	; 1
 3e2:	ee 19       	sub	r30, r14
 3e4:	ff 09       	sbc	r31, r15
 3e6:	81 2f       	mov	r24, r17
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	e8 17       	cp	r30, r24
 3ec:	f9 07       	cpc	r31, r25
 3ee:	28 f7       	brcc	.-54     	; 0x3ba <main+0x96>
	{
		i2c.Write(data[i]);
		lcd.LcdChar(data[i]);
	}
	i2c.Stop();
 3f0:	80 e8       	ldi	r24, 0x80	; 128
 3f2:	90 e0       	ldi	r25, 0x00	; 0
 3f4:	0e 94 cb 00 	call	0x196	; 0x196 <_ZN3I2c4StopEv>
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	2a 96       	adiw	r28, 0x0a	; 10
 3fe:	0f b6       	in	r0, 0x3f	; 63
 400:	f8 94       	cli
 402:	de bf       	out	0x3e, r29	; 62
 404:	0f be       	out	0x3f, r0	; 63
 406:	cd bf       	out	0x3d, r28	; 61
 408:	df 91       	pop	r29
 40a:	cf 91       	pop	r28
 40c:	1f 91       	pop	r17
 40e:	0f 91       	pop	r16
 410:	ff 90       	pop	r15
 412:	ef 90       	pop	r14
 414:	08 95       	ret

00000416 <__subsf3>:
 416:	50 58       	subi	r21, 0x80	; 128

00000418 <__addsf3>:
 418:	bb 27       	eor	r27, r27
 41a:	aa 27       	eor	r26, r26
 41c:	0e 94 23 02 	call	0x446	; 0x446 <__addsf3x>
 420:	0c 94 6d 03 	jmp	0x6da	; 0x6da <__fp_round>
 424:	0e 94 5f 03 	call	0x6be	; 0x6be <__fp_pscA>
 428:	38 f0       	brcs	.+14     	; 0x438 <__addsf3+0x20>
 42a:	0e 94 66 03 	call	0x6cc	; 0x6cc <__fp_pscB>
 42e:	20 f0       	brcs	.+8      	; 0x438 <__addsf3+0x20>
 430:	39 f4       	brne	.+14     	; 0x440 <__addsf3+0x28>
 432:	9f 3f       	cpi	r25, 0xFF	; 255
 434:	19 f4       	brne	.+6      	; 0x43c <__addsf3+0x24>
 436:	26 f4       	brtc	.+8      	; 0x440 <__addsf3+0x28>
 438:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_nan>
 43c:	0e f4       	brtc	.+2      	; 0x440 <__addsf3+0x28>
 43e:	e0 95       	com	r30
 440:	e7 fb       	bst	r30, 7
 442:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>

00000446 <__addsf3x>:
 446:	e9 2f       	mov	r30, r25
 448:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__fp_split3>
 44c:	58 f3       	brcs	.-42     	; 0x424 <__addsf3+0xc>
 44e:	ba 17       	cp	r27, r26
 450:	62 07       	cpc	r22, r18
 452:	73 07       	cpc	r23, r19
 454:	84 07       	cpc	r24, r20
 456:	95 07       	cpc	r25, r21
 458:	20 f0       	brcs	.+8      	; 0x462 <__stack+0x3>
 45a:	79 f4       	brne	.+30     	; 0x47a <__stack+0x1b>
 45c:	a6 f5       	brtc	.+104    	; 0x4c6 <__stack+0x67>
 45e:	0c 94 a0 03 	jmp	0x740	; 0x740 <__fp_zero>
 462:	0e f4       	brtc	.+2      	; 0x466 <__stack+0x7>
 464:	e0 95       	com	r30
 466:	0b 2e       	mov	r0, r27
 468:	ba 2f       	mov	r27, r26
 46a:	a0 2d       	mov	r26, r0
 46c:	0b 01       	movw	r0, r22
 46e:	b9 01       	movw	r22, r18
 470:	90 01       	movw	r18, r0
 472:	0c 01       	movw	r0, r24
 474:	ca 01       	movw	r24, r20
 476:	a0 01       	movw	r20, r0
 478:	11 24       	eor	r1, r1
 47a:	ff 27       	eor	r31, r31
 47c:	59 1b       	sub	r21, r25
 47e:	99 f0       	breq	.+38     	; 0x4a6 <__stack+0x47>
 480:	59 3f       	cpi	r21, 0xF9	; 249
 482:	50 f4       	brcc	.+20     	; 0x498 <__stack+0x39>
 484:	50 3e       	cpi	r21, 0xE0	; 224
 486:	68 f1       	brcs	.+90     	; 0x4e2 <__stack+0x83>
 488:	1a 16       	cp	r1, r26
 48a:	f0 40       	sbci	r31, 0x00	; 0
 48c:	a2 2f       	mov	r26, r18
 48e:	23 2f       	mov	r18, r19
 490:	34 2f       	mov	r19, r20
 492:	44 27       	eor	r20, r20
 494:	58 5f       	subi	r21, 0xF8	; 248
 496:	f3 cf       	rjmp	.-26     	; 0x47e <__stack+0x1f>
 498:	46 95       	lsr	r20
 49a:	37 95       	ror	r19
 49c:	27 95       	ror	r18
 49e:	a7 95       	ror	r26
 4a0:	f0 40       	sbci	r31, 0x00	; 0
 4a2:	53 95       	inc	r21
 4a4:	c9 f7       	brne	.-14     	; 0x498 <__stack+0x39>
 4a6:	7e f4       	brtc	.+30     	; 0x4c6 <__stack+0x67>
 4a8:	1f 16       	cp	r1, r31
 4aa:	ba 0b       	sbc	r27, r26
 4ac:	62 0b       	sbc	r22, r18
 4ae:	73 0b       	sbc	r23, r19
 4b0:	84 0b       	sbc	r24, r20
 4b2:	ba f0       	brmi	.+46     	; 0x4e2 <__stack+0x83>
 4b4:	91 50       	subi	r25, 0x01	; 1
 4b6:	a1 f0       	breq	.+40     	; 0x4e0 <__stack+0x81>
 4b8:	ff 0f       	add	r31, r31
 4ba:	bb 1f       	adc	r27, r27
 4bc:	66 1f       	adc	r22, r22
 4be:	77 1f       	adc	r23, r23
 4c0:	88 1f       	adc	r24, r24
 4c2:	c2 f7       	brpl	.-16     	; 0x4b4 <__stack+0x55>
 4c4:	0e c0       	rjmp	.+28     	; 0x4e2 <__stack+0x83>
 4c6:	ba 0f       	add	r27, r26
 4c8:	62 1f       	adc	r22, r18
 4ca:	73 1f       	adc	r23, r19
 4cc:	84 1f       	adc	r24, r20
 4ce:	48 f4       	brcc	.+18     	; 0x4e2 <__stack+0x83>
 4d0:	87 95       	ror	r24
 4d2:	77 95       	ror	r23
 4d4:	67 95       	ror	r22
 4d6:	b7 95       	ror	r27
 4d8:	f7 95       	ror	r31
 4da:	9e 3f       	cpi	r25, 0xFE	; 254
 4dc:	08 f0       	brcs	.+2      	; 0x4e0 <__stack+0x81>
 4de:	b0 cf       	rjmp	.-160    	; 0x440 <__addsf3+0x28>
 4e0:	93 95       	inc	r25
 4e2:	88 0f       	add	r24, r24
 4e4:	08 f0       	brcs	.+2      	; 0x4e8 <__stack+0x89>
 4e6:	99 27       	eor	r25, r25
 4e8:	ee 0f       	add	r30, r30
 4ea:	97 95       	ror	r25
 4ec:	87 95       	ror	r24
 4ee:	08 95       	ret

000004f0 <__divsf3>:
 4f0:	0e 94 8c 02 	call	0x518	; 0x518 <__divsf3x>
 4f4:	0c 94 6d 03 	jmp	0x6da	; 0x6da <__fp_round>
 4f8:	0e 94 66 03 	call	0x6cc	; 0x6cc <__fp_pscB>
 4fc:	58 f0       	brcs	.+22     	; 0x514 <__divsf3+0x24>
 4fe:	0e 94 5f 03 	call	0x6be	; 0x6be <__fp_pscA>
 502:	40 f0       	brcs	.+16     	; 0x514 <__divsf3+0x24>
 504:	29 f4       	brne	.+10     	; 0x510 <__divsf3+0x20>
 506:	5f 3f       	cpi	r21, 0xFF	; 255
 508:	29 f0       	breq	.+10     	; 0x514 <__divsf3+0x24>
 50a:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>
 50e:	51 11       	cpse	r21, r1
 510:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_szero>
 514:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_nan>

00000518 <__divsf3x>:
 518:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__fp_split3>
 51c:	68 f3       	brcs	.-38     	; 0x4f8 <__divsf3+0x8>

0000051e <__divsf3_pse>:
 51e:	99 23       	and	r25, r25
 520:	b1 f3       	breq	.-20     	; 0x50e <__divsf3+0x1e>
 522:	55 23       	and	r21, r21
 524:	91 f3       	breq	.-28     	; 0x50a <__divsf3+0x1a>
 526:	95 1b       	sub	r25, r21
 528:	55 0b       	sbc	r21, r21
 52a:	bb 27       	eor	r27, r27
 52c:	aa 27       	eor	r26, r26
 52e:	62 17       	cp	r22, r18
 530:	73 07       	cpc	r23, r19
 532:	84 07       	cpc	r24, r20
 534:	38 f0       	brcs	.+14     	; 0x544 <__divsf3_pse+0x26>
 536:	9f 5f       	subi	r25, 0xFF	; 255
 538:	5f 4f       	sbci	r21, 0xFF	; 255
 53a:	22 0f       	add	r18, r18
 53c:	33 1f       	adc	r19, r19
 53e:	44 1f       	adc	r20, r20
 540:	aa 1f       	adc	r26, r26
 542:	a9 f3       	breq	.-22     	; 0x52e <__divsf3_pse+0x10>
 544:	35 d0       	rcall	.+106    	; 0x5b0 <__divsf3_pse+0x92>
 546:	0e 2e       	mov	r0, r30
 548:	3a f0       	brmi	.+14     	; 0x558 <__divsf3_pse+0x3a>
 54a:	e0 e8       	ldi	r30, 0x80	; 128
 54c:	32 d0       	rcall	.+100    	; 0x5b2 <__divsf3_pse+0x94>
 54e:	91 50       	subi	r25, 0x01	; 1
 550:	50 40       	sbci	r21, 0x00	; 0
 552:	e6 95       	lsr	r30
 554:	00 1c       	adc	r0, r0
 556:	ca f7       	brpl	.-14     	; 0x54a <__divsf3_pse+0x2c>
 558:	2b d0       	rcall	.+86     	; 0x5b0 <__divsf3_pse+0x92>
 55a:	fe 2f       	mov	r31, r30
 55c:	29 d0       	rcall	.+82     	; 0x5b0 <__divsf3_pse+0x92>
 55e:	66 0f       	add	r22, r22
 560:	77 1f       	adc	r23, r23
 562:	88 1f       	adc	r24, r24
 564:	bb 1f       	adc	r27, r27
 566:	26 17       	cp	r18, r22
 568:	37 07       	cpc	r19, r23
 56a:	48 07       	cpc	r20, r24
 56c:	ab 07       	cpc	r26, r27
 56e:	b0 e8       	ldi	r27, 0x80	; 128
 570:	09 f0       	breq	.+2      	; 0x574 <__divsf3_pse+0x56>
 572:	bb 0b       	sbc	r27, r27
 574:	80 2d       	mov	r24, r0
 576:	bf 01       	movw	r22, r30
 578:	ff 27       	eor	r31, r31
 57a:	93 58       	subi	r25, 0x83	; 131
 57c:	5f 4f       	sbci	r21, 0xFF	; 255
 57e:	3a f0       	brmi	.+14     	; 0x58e <__divsf3_pse+0x70>
 580:	9e 3f       	cpi	r25, 0xFE	; 254
 582:	51 05       	cpc	r21, r1
 584:	78 f0       	brcs	.+30     	; 0x5a4 <__divsf3_pse+0x86>
 586:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>
 58a:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_szero>
 58e:	5f 3f       	cpi	r21, 0xFF	; 255
 590:	e4 f3       	brlt	.-8      	; 0x58a <__divsf3_pse+0x6c>
 592:	98 3e       	cpi	r25, 0xE8	; 232
 594:	d4 f3       	brlt	.-12     	; 0x58a <__divsf3_pse+0x6c>
 596:	86 95       	lsr	r24
 598:	77 95       	ror	r23
 59a:	67 95       	ror	r22
 59c:	b7 95       	ror	r27
 59e:	f7 95       	ror	r31
 5a0:	9f 5f       	subi	r25, 0xFF	; 255
 5a2:	c9 f7       	brne	.-14     	; 0x596 <__divsf3_pse+0x78>
 5a4:	88 0f       	add	r24, r24
 5a6:	91 1d       	adc	r25, r1
 5a8:	96 95       	lsr	r25
 5aa:	87 95       	ror	r24
 5ac:	97 f9       	bld	r25, 7
 5ae:	08 95       	ret
 5b0:	e1 e0       	ldi	r30, 0x01	; 1
 5b2:	66 0f       	add	r22, r22
 5b4:	77 1f       	adc	r23, r23
 5b6:	88 1f       	adc	r24, r24
 5b8:	bb 1f       	adc	r27, r27
 5ba:	62 17       	cp	r22, r18
 5bc:	73 07       	cpc	r23, r19
 5be:	84 07       	cpc	r24, r20
 5c0:	ba 07       	cpc	r27, r26
 5c2:	20 f0       	brcs	.+8      	; 0x5cc <__divsf3_pse+0xae>
 5c4:	62 1b       	sub	r22, r18
 5c6:	73 0b       	sbc	r23, r19
 5c8:	84 0b       	sbc	r24, r20
 5ca:	ba 0b       	sbc	r27, r26
 5cc:	ee 1f       	adc	r30, r30
 5ce:	88 f7       	brcc	.-30     	; 0x5b2 <__divsf3_pse+0x94>
 5d0:	e0 95       	com	r30
 5d2:	08 95       	ret

000005d4 <__fixunssfsi>:
 5d4:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_splitA>
 5d8:	88 f0       	brcs	.+34     	; 0x5fc <__fixunssfsi+0x28>
 5da:	9f 57       	subi	r25, 0x7F	; 127
 5dc:	98 f0       	brcs	.+38     	; 0x604 <__fixunssfsi+0x30>
 5de:	b9 2f       	mov	r27, r25
 5e0:	99 27       	eor	r25, r25
 5e2:	b7 51       	subi	r27, 0x17	; 23
 5e4:	b0 f0       	brcs	.+44     	; 0x612 <__fixunssfsi+0x3e>
 5e6:	e1 f0       	breq	.+56     	; 0x620 <__fixunssfsi+0x4c>
 5e8:	66 0f       	add	r22, r22
 5ea:	77 1f       	adc	r23, r23
 5ec:	88 1f       	adc	r24, r24
 5ee:	99 1f       	adc	r25, r25
 5f0:	1a f0       	brmi	.+6      	; 0x5f8 <__fixunssfsi+0x24>
 5f2:	ba 95       	dec	r27
 5f4:	c9 f7       	brne	.-14     	; 0x5e8 <__fixunssfsi+0x14>
 5f6:	14 c0       	rjmp	.+40     	; 0x620 <__fixunssfsi+0x4c>
 5f8:	b1 30       	cpi	r27, 0x01	; 1
 5fa:	91 f0       	breq	.+36     	; 0x620 <__fixunssfsi+0x4c>
 5fc:	0e 94 a0 03 	call	0x740	; 0x740 <__fp_zero>
 600:	b1 e0       	ldi	r27, 0x01	; 1
 602:	08 95       	ret
 604:	0c 94 a0 03 	jmp	0x740	; 0x740 <__fp_zero>
 608:	67 2f       	mov	r22, r23
 60a:	78 2f       	mov	r23, r24
 60c:	88 27       	eor	r24, r24
 60e:	b8 5f       	subi	r27, 0xF8	; 248
 610:	39 f0       	breq	.+14     	; 0x620 <__fixunssfsi+0x4c>
 612:	b9 3f       	cpi	r27, 0xF9	; 249
 614:	cc f3       	brlt	.-14     	; 0x608 <__fixunssfsi+0x34>
 616:	86 95       	lsr	r24
 618:	77 95       	ror	r23
 61a:	67 95       	ror	r22
 61c:	b3 95       	inc	r27
 61e:	d9 f7       	brne	.-10     	; 0x616 <__fixunssfsi+0x42>
 620:	3e f4       	brtc	.+14     	; 0x630 <__fixunssfsi+0x5c>
 622:	90 95       	com	r25
 624:	80 95       	com	r24
 626:	70 95       	com	r23
 628:	61 95       	neg	r22
 62a:	7f 4f       	sbci	r23, 0xFF	; 255
 62c:	8f 4f       	sbci	r24, 0xFF	; 255
 62e:	9f 4f       	sbci	r25, 0xFF	; 255
 630:	08 95       	ret

00000632 <__floatunsisf>:
 632:	e8 94       	clt
 634:	09 c0       	rjmp	.+18     	; 0x648 <__floatsisf+0x12>

00000636 <__floatsisf>:
 636:	97 fb       	bst	r25, 7
 638:	3e f4       	brtc	.+14     	; 0x648 <__floatsisf+0x12>
 63a:	90 95       	com	r25
 63c:	80 95       	com	r24
 63e:	70 95       	com	r23
 640:	61 95       	neg	r22
 642:	7f 4f       	sbci	r23, 0xFF	; 255
 644:	8f 4f       	sbci	r24, 0xFF	; 255
 646:	9f 4f       	sbci	r25, 0xFF	; 255
 648:	99 23       	and	r25, r25
 64a:	a9 f0       	breq	.+42     	; 0x676 <__floatsisf+0x40>
 64c:	f9 2f       	mov	r31, r25
 64e:	96 e9       	ldi	r25, 0x96	; 150
 650:	bb 27       	eor	r27, r27
 652:	93 95       	inc	r25
 654:	f6 95       	lsr	r31
 656:	87 95       	ror	r24
 658:	77 95       	ror	r23
 65a:	67 95       	ror	r22
 65c:	b7 95       	ror	r27
 65e:	f1 11       	cpse	r31, r1
 660:	f8 cf       	rjmp	.-16     	; 0x652 <__floatsisf+0x1c>
 662:	fa f4       	brpl	.+62     	; 0x6a2 <__floatsisf+0x6c>
 664:	bb 0f       	add	r27, r27
 666:	11 f4       	brne	.+4      	; 0x66c <__floatsisf+0x36>
 668:	60 ff       	sbrs	r22, 0
 66a:	1b c0       	rjmp	.+54     	; 0x6a2 <__floatsisf+0x6c>
 66c:	6f 5f       	subi	r22, 0xFF	; 255
 66e:	7f 4f       	sbci	r23, 0xFF	; 255
 670:	8f 4f       	sbci	r24, 0xFF	; 255
 672:	9f 4f       	sbci	r25, 0xFF	; 255
 674:	16 c0       	rjmp	.+44     	; 0x6a2 <__floatsisf+0x6c>
 676:	88 23       	and	r24, r24
 678:	11 f0       	breq	.+4      	; 0x67e <__floatsisf+0x48>
 67a:	96 e9       	ldi	r25, 0x96	; 150
 67c:	11 c0       	rjmp	.+34     	; 0x6a0 <__floatsisf+0x6a>
 67e:	77 23       	and	r23, r23
 680:	21 f0       	breq	.+8      	; 0x68a <__floatsisf+0x54>
 682:	9e e8       	ldi	r25, 0x8E	; 142
 684:	87 2f       	mov	r24, r23
 686:	76 2f       	mov	r23, r22
 688:	05 c0       	rjmp	.+10     	; 0x694 <__floatsisf+0x5e>
 68a:	66 23       	and	r22, r22
 68c:	71 f0       	breq	.+28     	; 0x6aa <__floatsisf+0x74>
 68e:	96 e8       	ldi	r25, 0x86	; 134
 690:	86 2f       	mov	r24, r22
 692:	70 e0       	ldi	r23, 0x00	; 0
 694:	60 e0       	ldi	r22, 0x00	; 0
 696:	2a f0       	brmi	.+10     	; 0x6a2 <__floatsisf+0x6c>
 698:	9a 95       	dec	r25
 69a:	66 0f       	add	r22, r22
 69c:	77 1f       	adc	r23, r23
 69e:	88 1f       	adc	r24, r24
 6a0:	da f7       	brpl	.-10     	; 0x698 <__floatsisf+0x62>
 6a2:	88 0f       	add	r24, r24
 6a4:	96 95       	lsr	r25
 6a6:	87 95       	ror	r24
 6a8:	97 f9       	bld	r25, 7
 6aa:	08 95       	ret

000006ac <__fp_inf>:
 6ac:	97 f9       	bld	r25, 7
 6ae:	9f 67       	ori	r25, 0x7F	; 127
 6b0:	80 e8       	ldi	r24, 0x80	; 128
 6b2:	70 e0       	ldi	r23, 0x00	; 0
 6b4:	60 e0       	ldi	r22, 0x00	; 0
 6b6:	08 95       	ret

000006b8 <__fp_nan>:
 6b8:	9f ef       	ldi	r25, 0xFF	; 255
 6ba:	80 ec       	ldi	r24, 0xC0	; 192
 6bc:	08 95       	ret

000006be <__fp_pscA>:
 6be:	00 24       	eor	r0, r0
 6c0:	0a 94       	dec	r0
 6c2:	16 16       	cp	r1, r22
 6c4:	17 06       	cpc	r1, r23
 6c6:	18 06       	cpc	r1, r24
 6c8:	09 06       	cpc	r0, r25
 6ca:	08 95       	ret

000006cc <__fp_pscB>:
 6cc:	00 24       	eor	r0, r0
 6ce:	0a 94       	dec	r0
 6d0:	12 16       	cp	r1, r18
 6d2:	13 06       	cpc	r1, r19
 6d4:	14 06       	cpc	r1, r20
 6d6:	05 06       	cpc	r0, r21
 6d8:	08 95       	ret

000006da <__fp_round>:
 6da:	09 2e       	mov	r0, r25
 6dc:	03 94       	inc	r0
 6de:	00 0c       	add	r0, r0
 6e0:	11 f4       	brne	.+4      	; 0x6e6 <__fp_round+0xc>
 6e2:	88 23       	and	r24, r24
 6e4:	52 f0       	brmi	.+20     	; 0x6fa <__fp_round+0x20>
 6e6:	bb 0f       	add	r27, r27
 6e8:	40 f4       	brcc	.+16     	; 0x6fa <__fp_round+0x20>
 6ea:	bf 2b       	or	r27, r31
 6ec:	11 f4       	brne	.+4      	; 0x6f2 <__fp_round+0x18>
 6ee:	60 ff       	sbrs	r22, 0
 6f0:	04 c0       	rjmp	.+8      	; 0x6fa <__fp_round+0x20>
 6f2:	6f 5f       	subi	r22, 0xFF	; 255
 6f4:	7f 4f       	sbci	r23, 0xFF	; 255
 6f6:	8f 4f       	sbci	r24, 0xFF	; 255
 6f8:	9f 4f       	sbci	r25, 0xFF	; 255
 6fa:	08 95       	ret

000006fc <__fp_split3>:
 6fc:	57 fd       	sbrc	r21, 7
 6fe:	90 58       	subi	r25, 0x80	; 128
 700:	44 0f       	add	r20, r20
 702:	55 1f       	adc	r21, r21
 704:	59 f0       	breq	.+22     	; 0x71c <__fp_splitA+0x10>
 706:	5f 3f       	cpi	r21, 0xFF	; 255
 708:	71 f0       	breq	.+28     	; 0x726 <__fp_splitA+0x1a>
 70a:	47 95       	ror	r20

0000070c <__fp_splitA>:
 70c:	88 0f       	add	r24, r24
 70e:	97 fb       	bst	r25, 7
 710:	99 1f       	adc	r25, r25
 712:	61 f0       	breq	.+24     	; 0x72c <__fp_splitA+0x20>
 714:	9f 3f       	cpi	r25, 0xFF	; 255
 716:	79 f0       	breq	.+30     	; 0x736 <__fp_splitA+0x2a>
 718:	87 95       	ror	r24
 71a:	08 95       	ret
 71c:	12 16       	cp	r1, r18
 71e:	13 06       	cpc	r1, r19
 720:	14 06       	cpc	r1, r20
 722:	55 1f       	adc	r21, r21
 724:	f2 cf       	rjmp	.-28     	; 0x70a <__fp_split3+0xe>
 726:	46 95       	lsr	r20
 728:	f1 df       	rcall	.-30     	; 0x70c <__fp_splitA>
 72a:	08 c0       	rjmp	.+16     	; 0x73c <__fp_splitA+0x30>
 72c:	16 16       	cp	r1, r22
 72e:	17 06       	cpc	r1, r23
 730:	18 06       	cpc	r1, r24
 732:	99 1f       	adc	r25, r25
 734:	f1 cf       	rjmp	.-30     	; 0x718 <__fp_splitA+0xc>
 736:	86 95       	lsr	r24
 738:	71 05       	cpc	r23, r1
 73a:	61 05       	cpc	r22, r1
 73c:	08 94       	sec
 73e:	08 95       	ret

00000740 <__fp_zero>:
 740:	e8 94       	clt

00000742 <__fp_szero>:
 742:	bb 27       	eor	r27, r27
 744:	66 27       	eor	r22, r22
 746:	77 27       	eor	r23, r23
 748:	cb 01       	movw	r24, r22
 74a:	97 f9       	bld	r25, 7
 74c:	08 95       	ret

0000074e <pow>:
 74e:	fa 01       	movw	r30, r20
 750:	ee 0f       	add	r30, r30
 752:	ff 1f       	adc	r31, r31
 754:	30 96       	adiw	r30, 0x00	; 0
 756:	21 05       	cpc	r18, r1
 758:	31 05       	cpc	r19, r1
 75a:	a1 f1       	breq	.+104    	; 0x7c4 <pow+0x76>
 75c:	61 15       	cp	r22, r1
 75e:	71 05       	cpc	r23, r1
 760:	61 f4       	brne	.+24     	; 0x77a <pow+0x2c>
 762:	80 38       	cpi	r24, 0x80	; 128
 764:	bf e3       	ldi	r27, 0x3F	; 63
 766:	9b 07       	cpc	r25, r27
 768:	49 f1       	breq	.+82     	; 0x7bc <pow+0x6e>
 76a:	68 94       	set
 76c:	90 38       	cpi	r25, 0x80	; 128
 76e:	81 05       	cpc	r24, r1
 770:	61 f0       	breq	.+24     	; 0x78a <pow+0x3c>
 772:	80 38       	cpi	r24, 0x80	; 128
 774:	bf ef       	ldi	r27, 0xFF	; 255
 776:	9b 07       	cpc	r25, r27
 778:	41 f0       	breq	.+16     	; 0x78a <pow+0x3c>
 77a:	99 23       	and	r25, r25
 77c:	4a f5       	brpl	.+82     	; 0x7d0 <pow+0x82>
 77e:	ff 3f       	cpi	r31, 0xFF	; 255
 780:	e1 05       	cpc	r30, r1
 782:	31 05       	cpc	r19, r1
 784:	21 05       	cpc	r18, r1
 786:	19 f1       	breq	.+70     	; 0x7ce <pow+0x80>
 788:	e8 94       	clt
 78a:	08 94       	sec
 78c:	e7 95       	ror	r30
 78e:	d9 01       	movw	r26, r18
 790:	aa 23       	and	r26, r26
 792:	29 f4       	brne	.+10     	; 0x79e <pow+0x50>
 794:	ab 2f       	mov	r26, r27
 796:	be 2f       	mov	r27, r30
 798:	f8 5f       	subi	r31, 0xF8	; 248
 79a:	d0 f3       	brcs	.-12     	; 0x790 <pow+0x42>
 79c:	10 c0       	rjmp	.+32     	; 0x7be <pow+0x70>
 79e:	ff 5f       	subi	r31, 0xFF	; 255
 7a0:	70 f4       	brcc	.+28     	; 0x7be <pow+0x70>
 7a2:	a6 95       	lsr	r26
 7a4:	e0 f7       	brcc	.-8      	; 0x79e <pow+0x50>
 7a6:	f7 39       	cpi	r31, 0x97	; 151
 7a8:	50 f0       	brcs	.+20     	; 0x7be <pow+0x70>
 7aa:	19 f0       	breq	.+6      	; 0x7b2 <pow+0x64>
 7ac:	ff 3a       	cpi	r31, 0xAF	; 175
 7ae:	38 f4       	brcc	.+14     	; 0x7be <pow+0x70>
 7b0:	9f 77       	andi	r25, 0x7F	; 127
 7b2:	9f 93       	push	r25
 7b4:	0d d0       	rcall	.+26     	; 0x7d0 <pow+0x82>
 7b6:	0f 90       	pop	r0
 7b8:	07 fc       	sbrc	r0, 7
 7ba:	90 58       	subi	r25, 0x80	; 128
 7bc:	08 95       	ret
 7be:	46 f0       	brts	.+16     	; 0x7d0 <pow+0x82>
 7c0:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_nan>
 7c4:	60 e0       	ldi	r22, 0x00	; 0
 7c6:	70 e0       	ldi	r23, 0x00	; 0
 7c8:	80 e8       	ldi	r24, 0x80	; 128
 7ca:	9f e3       	ldi	r25, 0x3F	; 63
 7cc:	08 95       	ret
 7ce:	4f e7       	ldi	r20, 0x7F	; 127
 7d0:	9f 77       	andi	r25, 0x7F	; 127
 7d2:	5f 93       	push	r21
 7d4:	4f 93       	push	r20
 7d6:	3f 93       	push	r19
 7d8:	2f 93       	push	r18
 7da:	0e 94 a2 04 	call	0x944	; 0x944 <log>
 7de:	2f 91       	pop	r18
 7e0:	3f 91       	pop	r19
 7e2:	4f 91       	pop	r20
 7e4:	5f 91       	pop	r21
 7e6:	0e 94 1e 05 	call	0xa3c	; 0xa3c <__mulsf3>
 7ea:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <exp>
 7ee:	29 f4       	brne	.+10     	; 0x7fa <pow+0xac>
 7f0:	16 f0       	brts	.+4      	; 0x7f6 <pow+0xa8>
 7f2:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>
 7f6:	0c 94 a0 03 	jmp	0x740	; 0x740 <__fp_zero>
 7fa:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_nan>

000007fe <exp>:
 7fe:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_splitA>
 802:	a8 f3       	brcs	.-22     	; 0x7ee <pow+0xa0>
 804:	96 38       	cpi	r25, 0x86	; 134
 806:	a0 f7       	brcc	.-24     	; 0x7f0 <pow+0xa2>
 808:	07 f8       	bld	r0, 7
 80a:	0f 92       	push	r0
 80c:	e8 94       	clt
 80e:	2b e3       	ldi	r18, 0x3B	; 59
 810:	3a ea       	ldi	r19, 0xAA	; 170
 812:	48 eb       	ldi	r20, 0xB8	; 184
 814:	5f e7       	ldi	r21, 0x7F	; 127
 816:	0e 94 34 05 	call	0xa68	; 0xa68 <__mulsf3_pse>
 81a:	0f 92       	push	r0
 81c:	0f 92       	push	r0
 81e:	0f 92       	push	r0
 820:	4d b7       	in	r20, 0x3d	; 61
 822:	5e b7       	in	r21, 0x3e	; 62
 824:	0f 92       	push	r0
 826:	0e 94 ea 04 	call	0x9d4	; 0x9d4 <modf>
 82a:	e4 e5       	ldi	r30, 0x54	; 84
 82c:	f0 e0       	ldi	r31, 0x00	; 0
 82e:	0e 94 31 04 	call	0x862	; 0x862 <__fp_powser>
 832:	4f 91       	pop	r20
 834:	5f 91       	pop	r21
 836:	ef 91       	pop	r30
 838:	ff 91       	pop	r31
 83a:	e5 95       	asr	r30
 83c:	ee 1f       	adc	r30, r30
 83e:	ff 1f       	adc	r31, r31
 840:	49 f0       	breq	.+18     	; 0x854 <exp+0x56>
 842:	fe 57       	subi	r31, 0x7E	; 126
 844:	e0 68       	ori	r30, 0x80	; 128
 846:	44 27       	eor	r20, r20
 848:	ee 0f       	add	r30, r30
 84a:	44 1f       	adc	r20, r20
 84c:	fa 95       	dec	r31
 84e:	e1 f7       	brne	.-8      	; 0x848 <exp+0x4a>
 850:	41 95       	neg	r20
 852:	55 0b       	sbc	r21, r21
 854:	0e 94 64 04 	call	0x8c8	; 0x8c8 <ldexp>
 858:	0f 90       	pop	r0
 85a:	07 fe       	sbrs	r0, 7
 85c:	0c 94 58 04 	jmp	0x8b0	; 0x8b0 <inverse>
 860:	08 95       	ret

00000862 <__fp_powser>:
 862:	df 93       	push	r29
 864:	cf 93       	push	r28
 866:	1f 93       	push	r17
 868:	0f 93       	push	r16
 86a:	ff 92       	push	r15
 86c:	ef 92       	push	r14
 86e:	df 92       	push	r13
 870:	7b 01       	movw	r14, r22
 872:	8c 01       	movw	r16, r24
 874:	68 94       	set
 876:	06 c0       	rjmp	.+12     	; 0x884 <__fp_powser+0x22>
 878:	da 2e       	mov	r13, r26
 87a:	ef 01       	movw	r28, r30
 87c:	0e 94 31 05 	call	0xa62	; 0xa62 <__mulsf3x>
 880:	fe 01       	movw	r30, r28
 882:	e8 94       	clt
 884:	a5 91       	lpm	r26, Z+
 886:	25 91       	lpm	r18, Z+
 888:	35 91       	lpm	r19, Z+
 88a:	45 91       	lpm	r20, Z+
 88c:	55 91       	lpm	r21, Z+
 88e:	a6 f3       	brts	.-24     	; 0x878 <__fp_powser+0x16>
 890:	ef 01       	movw	r28, r30
 892:	0e 94 23 02 	call	0x446	; 0x446 <__addsf3x>
 896:	fe 01       	movw	r30, r28
 898:	97 01       	movw	r18, r14
 89a:	a8 01       	movw	r20, r16
 89c:	da 94       	dec	r13
 89e:	69 f7       	brne	.-38     	; 0x87a <__fp_powser+0x18>
 8a0:	df 90       	pop	r13
 8a2:	ef 90       	pop	r14
 8a4:	ff 90       	pop	r15
 8a6:	0f 91       	pop	r16
 8a8:	1f 91       	pop	r17
 8aa:	cf 91       	pop	r28
 8ac:	df 91       	pop	r29
 8ae:	08 95       	ret

000008b0 <inverse>:
 8b0:	9b 01       	movw	r18, r22
 8b2:	ac 01       	movw	r20, r24
 8b4:	60 e0       	ldi	r22, 0x00	; 0
 8b6:	70 e0       	ldi	r23, 0x00	; 0
 8b8:	80 e8       	ldi	r24, 0x80	; 128
 8ba:	9f e3       	ldi	r25, 0x3F	; 63
 8bc:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__divsf3>
 8c0:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>
 8c4:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <__fp_mpack>

000008c8 <ldexp>:
 8c8:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_splitA>
 8cc:	d8 f3       	brcs	.-10     	; 0x8c4 <inverse+0x14>
 8ce:	99 23       	and	r25, r25
 8d0:	c9 f3       	breq	.-14     	; 0x8c4 <inverse+0x14>
 8d2:	94 0f       	add	r25, r20
 8d4:	51 1d       	adc	r21, r1
 8d6:	a3 f3       	brvs	.-24     	; 0x8c0 <inverse+0x10>
 8d8:	91 50       	subi	r25, 0x01	; 1
 8da:	50 40       	sbci	r21, 0x00	; 0
 8dc:	94 f0       	brlt	.+36     	; 0x902 <ldexp+0x3a>
 8de:	59 f0       	breq	.+22     	; 0x8f6 <ldexp+0x2e>
 8e0:	88 23       	and	r24, r24
 8e2:	32 f0       	brmi	.+12     	; 0x8f0 <ldexp+0x28>
 8e4:	66 0f       	add	r22, r22
 8e6:	77 1f       	adc	r23, r23
 8e8:	88 1f       	adc	r24, r24
 8ea:	91 50       	subi	r25, 0x01	; 1
 8ec:	50 40       	sbci	r21, 0x00	; 0
 8ee:	c1 f7       	brne	.-16     	; 0x8e0 <ldexp+0x18>
 8f0:	9e 3f       	cpi	r25, 0xFE	; 254
 8f2:	51 05       	cpc	r21, r1
 8f4:	2c f7       	brge	.-54     	; 0x8c0 <inverse+0x10>
 8f6:	88 0f       	add	r24, r24
 8f8:	91 1d       	adc	r25, r1
 8fa:	96 95       	lsr	r25
 8fc:	87 95       	ror	r24
 8fe:	97 f9       	bld	r25, 7
 900:	08 95       	ret
 902:	5f 3f       	cpi	r21, 0xFF	; 255
 904:	ac f0       	brlt	.+42     	; 0x930 <ldexp+0x68>
 906:	98 3e       	cpi	r25, 0xE8	; 232
 908:	9c f0       	brlt	.+38     	; 0x930 <ldexp+0x68>
 90a:	bb 27       	eor	r27, r27
 90c:	86 95       	lsr	r24
 90e:	77 95       	ror	r23
 910:	67 95       	ror	r22
 912:	b7 95       	ror	r27
 914:	08 f4       	brcc	.+2      	; 0x918 <ldexp+0x50>
 916:	b1 60       	ori	r27, 0x01	; 1
 918:	93 95       	inc	r25
 91a:	c1 f7       	brne	.-16     	; 0x90c <ldexp+0x44>
 91c:	bb 0f       	add	r27, r27
 91e:	58 f7       	brcc	.-42     	; 0x8f6 <ldexp+0x2e>
 920:	11 f4       	brne	.+4      	; 0x926 <ldexp+0x5e>
 922:	60 ff       	sbrs	r22, 0
 924:	e8 cf       	rjmp	.-48     	; 0x8f6 <ldexp+0x2e>
 926:	6f 5f       	subi	r22, 0xFF	; 255
 928:	7f 4f       	sbci	r23, 0xFF	; 255
 92a:	8f 4f       	sbci	r24, 0xFF	; 255
 92c:	9f 4f       	sbci	r25, 0xFF	; 255
 92e:	e3 cf       	rjmp	.-58     	; 0x8f6 <ldexp+0x2e>
 930:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_szero>
 934:	16 f0       	brts	.+4      	; 0x93a <ldexp+0x72>
 936:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <__fp_mpack>
 93a:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_nan>
 93e:	68 94       	set
 940:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>

00000944 <log>:
 944:	0e 94 86 03 	call	0x70c	; 0x70c <__fp_splitA>
 948:	a8 f3       	brcs	.-22     	; 0x934 <ldexp+0x6c>
 94a:	99 23       	and	r25, r25
 94c:	c1 f3       	breq	.-16     	; 0x93e <ldexp+0x76>
 94e:	ae f3       	brts	.-22     	; 0x93a <ldexp+0x72>
 950:	df 93       	push	r29
 952:	cf 93       	push	r28
 954:	1f 93       	push	r17
 956:	0f 93       	push	r16
 958:	ff 92       	push	r15
 95a:	c9 2f       	mov	r28, r25
 95c:	dd 27       	eor	r29, r29
 95e:	88 23       	and	r24, r24
 960:	2a f0       	brmi	.+10     	; 0x96c <log+0x28>
 962:	21 97       	sbiw	r28, 0x01	; 1
 964:	66 0f       	add	r22, r22
 966:	77 1f       	adc	r23, r23
 968:	88 1f       	adc	r24, r24
 96a:	da f7       	brpl	.-10     	; 0x962 <log+0x1e>
 96c:	20 e0       	ldi	r18, 0x00	; 0
 96e:	30 e0       	ldi	r19, 0x00	; 0
 970:	40 e8       	ldi	r20, 0x80	; 128
 972:	5f eb       	ldi	r21, 0xBF	; 191
 974:	9f e3       	ldi	r25, 0x3F	; 63
 976:	88 39       	cpi	r24, 0x98	; 152
 978:	20 f0       	brcs	.+8      	; 0x982 <log+0x3e>
 97a:	80 3e       	cpi	r24, 0xE0	; 224
 97c:	38 f0       	brcs	.+14     	; 0x98c <log+0x48>
 97e:	21 96       	adiw	r28, 0x01	; 1
 980:	8f 77       	andi	r24, 0x7F	; 127
 982:	0e 94 0c 02 	call	0x418	; 0x418 <__addsf3>
 986:	ec e7       	ldi	r30, 0x7C	; 124
 988:	f0 e0       	ldi	r31, 0x00	; 0
 98a:	04 c0       	rjmp	.+8      	; 0x994 <log+0x50>
 98c:	0e 94 0c 02 	call	0x418	; 0x418 <__addsf3>
 990:	e9 ea       	ldi	r30, 0xA9	; 169
 992:	f0 e0       	ldi	r31, 0x00	; 0
 994:	0e 94 31 04 	call	0x862	; 0x862 <__fp_powser>
 998:	8b 01       	movw	r16, r22
 99a:	be 01       	movw	r22, r28
 99c:	ec 01       	movw	r28, r24
 99e:	fb 2e       	mov	r15, r27
 9a0:	6f 57       	subi	r22, 0x7F	; 127
 9a2:	71 09       	sbc	r23, r1
 9a4:	75 95       	asr	r23
 9a6:	77 1f       	adc	r23, r23
 9a8:	88 0b       	sbc	r24, r24
 9aa:	99 0b       	sbc	r25, r25
 9ac:	0e 94 1b 03 	call	0x636	; 0x636 <__floatsisf>
 9b0:	28 e1       	ldi	r18, 0x18	; 24
 9b2:	32 e7       	ldi	r19, 0x72	; 114
 9b4:	41 e3       	ldi	r20, 0x31	; 49
 9b6:	5f e3       	ldi	r21, 0x3F	; 63
 9b8:	0e 94 31 05 	call	0xa62	; 0xa62 <__mulsf3x>
 9bc:	af 2d       	mov	r26, r15
 9be:	98 01       	movw	r18, r16
 9c0:	ae 01       	movw	r20, r28
 9c2:	ff 90       	pop	r15
 9c4:	0f 91       	pop	r16
 9c6:	1f 91       	pop	r17
 9c8:	cf 91       	pop	r28
 9ca:	df 91       	pop	r29
 9cc:	0e 94 23 02 	call	0x446	; 0x446 <__addsf3x>
 9d0:	0c 94 6d 03 	jmp	0x6da	; 0x6da <__fp_round>

000009d4 <modf>:
 9d4:	fa 01       	movw	r30, r20
 9d6:	dc 01       	movw	r26, r24
 9d8:	aa 0f       	add	r26, r26
 9da:	bb 1f       	adc	r27, r27
 9dc:	9b 01       	movw	r18, r22
 9de:	ac 01       	movw	r20, r24
 9e0:	bf 57       	subi	r27, 0x7F	; 127
 9e2:	28 f4       	brcc	.+10     	; 0x9ee <modf+0x1a>
 9e4:	22 27       	eor	r18, r18
 9e6:	33 27       	eor	r19, r19
 9e8:	44 27       	eor	r20, r20
 9ea:	50 78       	andi	r21, 0x80	; 128
 9ec:	20 c0       	rjmp	.+64     	; 0xa2e <modf+0x5a>
 9ee:	b7 51       	subi	r27, 0x17	; 23
 9f0:	90 f4       	brcc	.+36     	; 0xa16 <modf+0x42>
 9f2:	ab 2f       	mov	r26, r27
 9f4:	00 24       	eor	r0, r0
 9f6:	46 95       	lsr	r20
 9f8:	37 95       	ror	r19
 9fa:	27 95       	ror	r18
 9fc:	01 1c       	adc	r0, r1
 9fe:	a3 95       	inc	r26
 a00:	d2 f3       	brmi	.-12     	; 0x9f6 <modf+0x22>
 a02:	00 20       	and	r0, r0
 a04:	71 f0       	breq	.+28     	; 0xa22 <modf+0x4e>
 a06:	22 0f       	add	r18, r18
 a08:	33 1f       	adc	r19, r19
 a0a:	44 1f       	adc	r20, r20
 a0c:	b3 95       	inc	r27
 a0e:	da f3       	brmi	.-10     	; 0xa06 <modf+0x32>
 a10:	0e d0       	rcall	.+28     	; 0xa2e <modf+0x5a>
 a12:	0c 94 0b 02 	jmp	0x416	; 0x416 <__subsf3>
 a16:	61 30       	cpi	r22, 0x01	; 1
 a18:	71 05       	cpc	r23, r1
 a1a:	a0 e8       	ldi	r26, 0x80	; 128
 a1c:	8a 07       	cpc	r24, r26
 a1e:	b9 46       	sbci	r27, 0x69	; 105
 a20:	30 f4       	brcc	.+12     	; 0xa2e <modf+0x5a>
 a22:	9b 01       	movw	r18, r22
 a24:	ac 01       	movw	r20, r24
 a26:	66 27       	eor	r22, r22
 a28:	77 27       	eor	r23, r23
 a2a:	88 27       	eor	r24, r24
 a2c:	90 78       	andi	r25, 0x80	; 128
 a2e:	30 96       	adiw	r30, 0x00	; 0
 a30:	21 f0       	breq	.+8      	; 0xa3a <modf+0x66>
 a32:	20 83       	st	Z, r18
 a34:	31 83       	std	Z+1, r19	; 0x01
 a36:	42 83       	std	Z+2, r20	; 0x02
 a38:	53 83       	std	Z+3, r21	; 0x03
 a3a:	08 95       	ret

00000a3c <__mulsf3>:
 a3c:	0e 94 31 05 	call	0xa62	; 0xa62 <__mulsf3x>
 a40:	0c 94 6d 03 	jmp	0x6da	; 0x6da <__fp_round>
 a44:	0e 94 5f 03 	call	0x6be	; 0x6be <__fp_pscA>
 a48:	38 f0       	brcs	.+14     	; 0xa58 <__mulsf3+0x1c>
 a4a:	0e 94 66 03 	call	0x6cc	; 0x6cc <__fp_pscB>
 a4e:	20 f0       	brcs	.+8      	; 0xa58 <__mulsf3+0x1c>
 a50:	95 23       	and	r25, r21
 a52:	11 f0       	breq	.+4      	; 0xa58 <__mulsf3+0x1c>
 a54:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>
 a58:	0c 94 5c 03 	jmp	0x6b8	; 0x6b8 <__fp_nan>
 a5c:	11 24       	eor	r1, r1
 a5e:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_szero>

00000a62 <__mulsf3x>:
 a62:	0e 94 7e 03 	call	0x6fc	; 0x6fc <__fp_split3>
 a66:	70 f3       	brcs	.-36     	; 0xa44 <__mulsf3+0x8>

00000a68 <__mulsf3_pse>:
 a68:	95 9f       	mul	r25, r21
 a6a:	c1 f3       	breq	.-16     	; 0xa5c <__mulsf3+0x20>
 a6c:	95 0f       	add	r25, r21
 a6e:	50 e0       	ldi	r21, 0x00	; 0
 a70:	55 1f       	adc	r21, r21
 a72:	62 9f       	mul	r22, r18
 a74:	f0 01       	movw	r30, r0
 a76:	72 9f       	mul	r23, r18
 a78:	bb 27       	eor	r27, r27
 a7a:	f0 0d       	add	r31, r0
 a7c:	b1 1d       	adc	r27, r1
 a7e:	63 9f       	mul	r22, r19
 a80:	aa 27       	eor	r26, r26
 a82:	f0 0d       	add	r31, r0
 a84:	b1 1d       	adc	r27, r1
 a86:	aa 1f       	adc	r26, r26
 a88:	64 9f       	mul	r22, r20
 a8a:	66 27       	eor	r22, r22
 a8c:	b0 0d       	add	r27, r0
 a8e:	a1 1d       	adc	r26, r1
 a90:	66 1f       	adc	r22, r22
 a92:	82 9f       	mul	r24, r18
 a94:	22 27       	eor	r18, r18
 a96:	b0 0d       	add	r27, r0
 a98:	a1 1d       	adc	r26, r1
 a9a:	62 1f       	adc	r22, r18
 a9c:	73 9f       	mul	r23, r19
 a9e:	b0 0d       	add	r27, r0
 aa0:	a1 1d       	adc	r26, r1
 aa2:	62 1f       	adc	r22, r18
 aa4:	83 9f       	mul	r24, r19
 aa6:	a0 0d       	add	r26, r0
 aa8:	61 1d       	adc	r22, r1
 aaa:	22 1f       	adc	r18, r18
 aac:	74 9f       	mul	r23, r20
 aae:	33 27       	eor	r19, r19
 ab0:	a0 0d       	add	r26, r0
 ab2:	61 1d       	adc	r22, r1
 ab4:	23 1f       	adc	r18, r19
 ab6:	84 9f       	mul	r24, r20
 ab8:	60 0d       	add	r22, r0
 aba:	21 1d       	adc	r18, r1
 abc:	82 2f       	mov	r24, r18
 abe:	76 2f       	mov	r23, r22
 ac0:	6a 2f       	mov	r22, r26
 ac2:	11 24       	eor	r1, r1
 ac4:	9f 57       	subi	r25, 0x7F	; 127
 ac6:	50 40       	sbci	r21, 0x00	; 0
 ac8:	9a f0       	brmi	.+38     	; 0xaf0 <__mulsf3_pse+0x88>
 aca:	f1 f0       	breq	.+60     	; 0xb08 <__mulsf3_pse+0xa0>
 acc:	88 23       	and	r24, r24
 ace:	4a f0       	brmi	.+18     	; 0xae2 <__mulsf3_pse+0x7a>
 ad0:	ee 0f       	add	r30, r30
 ad2:	ff 1f       	adc	r31, r31
 ad4:	bb 1f       	adc	r27, r27
 ad6:	66 1f       	adc	r22, r22
 ad8:	77 1f       	adc	r23, r23
 ada:	88 1f       	adc	r24, r24
 adc:	91 50       	subi	r25, 0x01	; 1
 ade:	50 40       	sbci	r21, 0x00	; 0
 ae0:	a9 f7       	brne	.-22     	; 0xacc <__mulsf3_pse+0x64>
 ae2:	9e 3f       	cpi	r25, 0xFE	; 254
 ae4:	51 05       	cpc	r21, r1
 ae6:	80 f0       	brcs	.+32     	; 0xb08 <__mulsf3_pse+0xa0>
 ae8:	0c 94 56 03 	jmp	0x6ac	; 0x6ac <__fp_inf>
 aec:	0c 94 a1 03 	jmp	0x742	; 0x742 <__fp_szero>
 af0:	5f 3f       	cpi	r21, 0xFF	; 255
 af2:	e4 f3       	brlt	.-8      	; 0xaec <__mulsf3_pse+0x84>
 af4:	98 3e       	cpi	r25, 0xE8	; 232
 af6:	d4 f3       	brlt	.-12     	; 0xaec <__mulsf3_pse+0x84>
 af8:	86 95       	lsr	r24
 afa:	77 95       	ror	r23
 afc:	67 95       	ror	r22
 afe:	b7 95       	ror	r27
 b00:	f7 95       	ror	r31
 b02:	e7 95       	ror	r30
 b04:	9f 5f       	subi	r25, 0xFF	; 255
 b06:	c1 f7       	brne	.-16     	; 0xaf8 <__mulsf3_pse+0x90>
 b08:	fe 2b       	or	r31, r30
 b0a:	88 0f       	add	r24, r24
 b0c:	91 1d       	adc	r25, r1
 b0e:	96 95       	lsr	r25
 b10:	87 95       	ror	r24
 b12:	97 f9       	bld	r25, 7
 b14:	08 95       	ret

00000b16 <__fp_mpack>:
 b16:	9f 3f       	cpi	r25, 0xFF	; 255
 b18:	31 f0       	breq	.+12     	; 0xb26 <__fp_mpack_finite+0xc>

00000b1a <__fp_mpack_finite>:
 b1a:	91 50       	subi	r25, 0x01	; 1
 b1c:	20 f4       	brcc	.+8      	; 0xb26 <__fp_mpack_finite+0xc>
 b1e:	87 95       	ror	r24
 b20:	77 95       	ror	r23
 b22:	67 95       	ror	r22
 b24:	b7 95       	ror	r27
 b26:	88 0f       	add	r24, r24
 b28:	91 1d       	adc	r25, r1
 b2a:	96 95       	lsr	r25
 b2c:	87 95       	ror	r24
 b2e:	97 f9       	bld	r25, 7
 b30:	08 95       	ret

00000b32 <_exit>:
 b32:	f8 94       	cli

00000b34 <__stop_program>:
 b34:	ff cf       	rjmp	.-2      	; 0xb34 <__stop_program>
