
USART Transmitter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000026a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000a  00800060  0000026a  000002fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080006a  0080006a  00000308  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000308  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000338  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000374  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000a27  00000000  00000000  000003d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000765  00000000  00000000  00000dfb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003d0  00000000  00000000  00001560  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000cc  00000000  00000000  00001930  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004da  00000000  00000000  000019fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000292  00000000  00000000  00001ed6  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002168  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e6       	ldi	r30, 0x6A	; 106
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	aa 36       	cpi	r26, 0x6A	; 106
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	aa e6       	ldi	r26, 0x6A	; 106
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 36       	cpi	r26, 0x6B	; 107
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 33 01 	jmp	0x266	; 0x266 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
#include "Usart.h"

USART usart;

int main()
{
  92:	ef 92       	push	r14
  94:	0f 93       	push	r16
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
  9a:	cd b7       	in	r28, 0x3d	; 61
  9c:	de b7       	in	r29, 0x3e	; 62
  9e:	2a 97       	sbiw	r28, 0x0a	; 10
  a0:	0f b6       	in	r0, 0x3f	; 63
  a2:	f8 94       	cli
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	0f be       	out	0x3f, r0	; 63
  a8:	cd bf       	out	0x3d, r28	; 61
	char c[] = "Milad Hsh";
  aa:	8a e0       	ldi	r24, 0x0A	; 10
  ac:	e0 e6       	ldi	r30, 0x60	; 96
  ae:	f0 e0       	ldi	r31, 0x00	; 0
  b0:	de 01       	movw	r26, r28
  b2:	11 96       	adiw	r26, 0x01	; 1
  b4:	01 90       	ld	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	8a 95       	dec	r24
  ba:	e1 f7       	brne	.-8      	; 0xb4 <main+0x22>
	
	usart.UsartInit(9600, Asynchronous, Disabled, 8, false);
  bc:	e1 2c       	mov	r14, r1
  be:	08 e0       	ldi	r16, 0x08	; 8
  c0:	24 e0       	ldi	r18, 0x04	; 4
  c2:	40 e0       	ldi	r20, 0x00	; 0
  c4:	60 e8       	ldi	r22, 0x80	; 128
  c6:	75 e2       	ldi	r23, 0x25	; 37
  c8:	8a e6       	ldi	r24, 0x6A	; 106
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	0e 94 7c 00 	call	0xf8	; 0xf8 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb>
	
	usart.UsartStringTransmiter(c);
  d0:	be 01       	movw	r22, r28
  d2:	6f 5f       	subi	r22, 0xFF	; 255
  d4:	7f 4f       	sbci	r23, 0xFF	; 255
  d6:	8a e6       	ldi	r24, 0x6A	; 106
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 f5 00 	call	0x1ea	; 0x1ea <_ZN5USART21UsartStringTransmiterEPc>
}
  de:	80 e0       	ldi	r24, 0x00	; 0
  e0:	90 e0       	ldi	r25, 0x00	; 0
  e2:	2a 96       	adiw	r28, 0x0a	; 10
  e4:	0f b6       	in	r0, 0x3f	; 63
  e6:	f8 94       	cli
  e8:	de bf       	out	0x3e, r29	; 62
  ea:	0f be       	out	0x3f, r0	; 63
  ec:	cd bf       	out	0x3d, r28	; 61
  ee:	df 91       	pop	r29
  f0:	cf 91       	pop	r28
  f2:	0f 91       	pop	r16
  f4:	ef 90       	pop	r14
  f6:	08 95       	ret

000000f8 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb>:

unsigned char USART::UsartReciever(void)
{
	while ((UCSRA & (1 << RXC)) == 0);
	return UDR;
}
  f8:	ef 92       	push	r14
  fa:	0f 93       	push	r16
  fc:	23 30       	cpi	r18, 0x03	; 3
  fe:	81 f0       	breq	.+32     	; 0x120 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x28>
 100:	24 30       	cpi	r18, 0x04	; 4
 102:	19 f0       	breq	.+6      	; 0x10a <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x12>
 104:	22 30       	cpi	r18, 0x02	; 2
 106:	79 f4       	brne	.+30     	; 0x126 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x2e>
 108:	07 c0       	rjmp	.+14     	; 0x118 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x20>
 10a:	80 b5       	in	r24, 0x20	; 32
 10c:	8f 7e       	andi	r24, 0xEF	; 239
 10e:	80 bd       	out	0x20, r24	; 32
 110:	80 b5       	in	r24, 0x20	; 32
 112:	8f 7d       	andi	r24, 0xDF	; 223
 114:	80 bd       	out	0x20, r24	; 32
 116:	07 c0       	rjmp	.+14     	; 0x126 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x2e>
 118:	80 b5       	in	r24, 0x20	; 32
 11a:	80 62       	ori	r24, 0x20	; 32
 11c:	80 bd       	out	0x20, r24	; 32
 11e:	03 c0       	rjmp	.+6      	; 0x126 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x2e>
 120:	80 b5       	in	r24, 0x20	; 32
 122:	80 61       	ori	r24, 0x10	; 16
 124:	80 bd       	out	0x20, r24	; 32
 126:	44 23       	and	r20, r20
 128:	31 f0       	breq	.+12     	; 0x136 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x3e>
 12a:	41 30       	cpi	r20, 0x01	; 1
 12c:	39 f4       	brne	.+14     	; 0x13c <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x44>
 12e:	80 b5       	in	r24, 0x20	; 32
 130:	80 64       	ori	r24, 0x40	; 64
 132:	80 bd       	out	0x20, r24	; 32
 134:	03 c0       	rjmp	.+6      	; 0x13c <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x44>
 136:	80 b5       	in	r24, 0x20	; 32
 138:	8f 7b       	andi	r24, 0xBF	; 191
 13a:	80 bd       	out	0x20, r24	; 32
 13c:	ee 20       	and	r14, r14
 13e:	11 f0       	breq	.+4      	; 0x144 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x4c>
 140:	57 9a       	sbi	0x0a, 7	; 10
 142:	56 9a       	sbi	0x0a, 6	; 10
 144:	8a b1       	in	r24, 0x0a	; 10
 146:	88 61       	ori	r24, 0x18	; 24
 148:	8a b9       	out	0x0a, r24	; 10
 14a:	80 b5       	in	r24, 0x20	; 32
 14c:	80 68       	ori	r24, 0x80	; 128
 14e:	80 bd       	out	0x20, r24	; 32
 150:	07 30       	cpi	r16, 0x07	; 7
 152:	c9 f0       	breq	.+50     	; 0x186 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x8e>
 154:	28 f4       	brcc	.+10     	; 0x160 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x68>
 156:	05 30       	cpi	r16, 0x05	; 5
 158:	41 f0       	breq	.+16     	; 0x16a <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x72>
 15a:	06 30       	cpi	r16, 0x06	; 6
 15c:	69 f0       	breq	.+26     	; 0x178 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x80>
 15e:	1f c0       	rjmp	.+62     	; 0x19e <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0xa6>
 160:	08 30       	cpi	r16, 0x08	; 8
 162:	c1 f0       	breq	.+48     	; 0x194 <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0x9c>
 164:	09 30       	cpi	r16, 0x09	; 9
 166:	c9 f0       	breq	.+50     	; 0x19a <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0xa2>
 168:	1a c0       	rjmp	.+52     	; 0x19e <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0xa6>
 16a:	80 b5       	in	r24, 0x20	; 32
 16c:	8d 7f       	andi	r24, 0xFD	; 253
 16e:	80 bd       	out	0x20, r24	; 32
 170:	80 b5       	in	r24, 0x20	; 32
 172:	8b 7f       	andi	r24, 0xFB	; 251
 174:	80 bd       	out	0x20, r24	; 32
 176:	13 c0       	rjmp	.+38     	; 0x19e <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0xa6>
 178:	80 b5       	in	r24, 0x20	; 32
 17a:	82 60       	ori	r24, 0x02	; 2
 17c:	80 bd       	out	0x20, r24	; 32
 17e:	80 b5       	in	r24, 0x20	; 32
 180:	8b 7f       	andi	r24, 0xFB	; 251
 182:	80 bd       	out	0x20, r24	; 32
 184:	0c c0       	rjmp	.+24     	; 0x19e <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0xa6>
 186:	80 b5       	in	r24, 0x20	; 32
 188:	84 60       	ori	r24, 0x04	; 4
 18a:	80 bd       	out	0x20, r24	; 32
 18c:	80 b5       	in	r24, 0x20	; 32
 18e:	8d 7f       	andi	r24, 0xFD	; 253
 190:	80 bd       	out	0x20, r24	; 32
 192:	05 c0       	rjmp	.+10     	; 0x19e <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0xa6>
 194:	86 e0       	ldi	r24, 0x06	; 6
 196:	80 bd       	out	0x20, r24	; 32
 198:	02 c0       	rjmp	.+4      	; 0x19e <_ZN5USART9UsartInitEj15PhraseVarriableS0_hb+0xa6>
 19a:	86 e0       	ldi	r24, 0x06	; 6
 19c:	80 bd       	out	0x20, r24	; 32
 19e:	cb 01       	movw	r24, r22
 1a0:	a0 e0       	ldi	r26, 0x00	; 0
 1a2:	b0 e0       	ldi	r27, 0x00	; 0
 1a4:	88 0f       	add	r24, r24
 1a6:	99 1f       	adc	r25, r25
 1a8:	aa 1f       	adc	r26, r26
 1aa:	bb 1f       	adc	r27, r27
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	aa 1f       	adc	r26, r26
 1b2:	bb 1f       	adc	r27, r27
 1b4:	9c 01       	movw	r18, r24
 1b6:	ad 01       	movw	r20, r26
 1b8:	22 0f       	add	r18, r18
 1ba:	33 1f       	adc	r19, r19
 1bc:	44 1f       	adc	r20, r20
 1be:	55 1f       	adc	r21, r21
 1c0:	22 0f       	add	r18, r18
 1c2:	33 1f       	adc	r19, r19
 1c4:	44 1f       	adc	r20, r20
 1c6:	55 1f       	adc	r21, r21
 1c8:	60 e0       	ldi	r22, 0x00	; 0
 1ca:	72 e1       	ldi	r23, 0x12	; 18
 1cc:	8a e7       	ldi	r24, 0x7A	; 122
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	0e 94 11 01 	call	0x222	; 0x222 <__udivmodsi4>
 1d4:	21 50       	subi	r18, 0x01	; 1
 1d6:	31 09       	sbc	r19, r1
 1d8:	29 b9       	out	0x09, r18	; 9
 1da:	30 bd       	out	0x20, r19	; 32
 1dc:	0f 91       	pop	r16
 1de:	ef 90       	pop	r14
 1e0:	08 95       	ret

000001e2 <_ZN5USART15UsartTransmiterEh>:
 1e2:	5d 9b       	sbis	0x0b, 5	; 11
 1e4:	fe cf       	rjmp	.-4      	; 0x1e2 <_ZN5USART15UsartTransmiterEh>
 1e6:	6c b9       	out	0x0c, r22	; 12
 1e8:	08 95       	ret

000001ea <_ZN5USART21UsartStringTransmiterEPc>:

void USART::UsartStringTransmiter(char *str)
{
 1ea:	ef 92       	push	r14
 1ec:	ff 92       	push	r15
 1ee:	0f 93       	push	r16
 1f0:	1f 93       	push	r17
 1f2:	cf 93       	push	r28
 1f4:	fb 01       	movw	r30, r22
	
	unsigned char i = 0;
	
	while (str[i] != 0)
 1f6:	60 81       	ld	r22, Z
 1f8:	66 23       	and	r22, r22
 1fa:	69 f0       	breq	.+26     	; 0x216 <_ZN5USART21UsartStringTransmiterEPc+0x2c>
 1fc:	8f 01       	movw	r16, r30
 1fe:	7c 01       	movw	r14, r24
 200:	c0 e0       	ldi	r28, 0x00	; 0
	{
		UsartTransmiter(str[i]);
 202:	c7 01       	movw	r24, r14
 204:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <_ZN5USART15UsartTransmiterEh>
		i++;
 208:	cf 5f       	subi	r28, 0xFF	; 255
void USART::UsartStringTransmiter(char *str)
{
	
	unsigned char i = 0;
	
	while (str[i] != 0)
 20a:	f8 01       	movw	r30, r16
 20c:	ec 0f       	add	r30, r28
 20e:	f1 1d       	adc	r31, r1
 210:	60 81       	ld	r22, Z
 212:	61 11       	cpse	r22, r1
 214:	f6 cf       	rjmp	.-20     	; 0x202 <_ZN5USART21UsartStringTransmiterEPc+0x18>
	{
		UsartTransmiter(str[i]);
		i++;
	}
		
}
 216:	cf 91       	pop	r28
 218:	1f 91       	pop	r17
 21a:	0f 91       	pop	r16
 21c:	ff 90       	pop	r15
 21e:	ef 90       	pop	r14
 220:	08 95       	ret

00000222 <__udivmodsi4>:
 222:	a1 e2       	ldi	r26, 0x21	; 33
 224:	1a 2e       	mov	r1, r26
 226:	aa 1b       	sub	r26, r26
 228:	bb 1b       	sub	r27, r27
 22a:	fd 01       	movw	r30, r26
 22c:	0d c0       	rjmp	.+26     	; 0x248 <__udivmodsi4_ep>

0000022e <__udivmodsi4_loop>:
 22e:	aa 1f       	adc	r26, r26
 230:	bb 1f       	adc	r27, r27
 232:	ee 1f       	adc	r30, r30
 234:	ff 1f       	adc	r31, r31
 236:	a2 17       	cp	r26, r18
 238:	b3 07       	cpc	r27, r19
 23a:	e4 07       	cpc	r30, r20
 23c:	f5 07       	cpc	r31, r21
 23e:	20 f0       	brcs	.+8      	; 0x248 <__udivmodsi4_ep>
 240:	a2 1b       	sub	r26, r18
 242:	b3 0b       	sbc	r27, r19
 244:	e4 0b       	sbc	r30, r20
 246:	f5 0b       	sbc	r31, r21

00000248 <__udivmodsi4_ep>:
 248:	66 1f       	adc	r22, r22
 24a:	77 1f       	adc	r23, r23
 24c:	88 1f       	adc	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	1a 94       	dec	r1
 252:	69 f7       	brne	.-38     	; 0x22e <__udivmodsi4_loop>
 254:	60 95       	com	r22
 256:	70 95       	com	r23
 258:	80 95       	com	r24
 25a:	90 95       	com	r25
 25c:	9b 01       	movw	r18, r22
 25e:	ac 01       	movw	r20, r24
 260:	bd 01       	movw	r22, r26
 262:	cf 01       	movw	r24, r30
 264:	08 95       	ret

00000266 <_exit>:
 266:	f8 94       	cli

00000268 <__stop_program>:
 268:	ff cf       	rjmp	.-2      	; 0x268 <__stop_program>
